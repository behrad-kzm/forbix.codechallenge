{
  "name": "api-app",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "typeorm": "env-cmd -f $ENV_PATH ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "migration:generate": "env-cmd -f $ENV_PATH npm run typeorm -- --dataSource=src/database/data-source.ts migration:generate",
    "migration:create": "env-cmd -f $ENV_PATH npm run typeorm -- migration:create",
    "migration:run": "env-cmd -f $ENV_PATH npm run typeorm -- --dataSource=src/database/data-source.ts migration:run",
    "migration:revert": "env-cmd -f $ENV_PATH npm run typeorm -- --dataSource=src/database/data-source.ts migration:revert",
    "schema:drop": "env-cmd -f $ENV_PATH npm run typeorm -- --dataSource=src/database/data-source.ts schema:drop",
    "seed:run": "tsc && ts-node -r tsconfig-paths/register ./src/database/seeds/run-seed.ts",
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "env-cmd -f $ENV_PATH nest start",
    "start:dev": "env-cmd -f $ENV_PATH node dist/main",
    "start:debug": "nest start --debug --watch",
    "start:prod": "env-cmd -f $ENV_PATH node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:reset-db": "env-cmd -f $ENV_PATH npm run schema:drop && npm run migration:run",
    "test:debug": "env-cmd -f $ENV_PATH node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "env-cmd -f $ENV_PATH jest --config ./test/jest-e2e.json --detectOpenHandles",
    "test:e2e:single": "env-cmd -f $ENV_PATH jest --config ./test/jest-e2e.json",
    "test:unit": "env-cmd -f $ENV_PATH jest --config ./test/jest-unit.json --detectOpenHandles",
    "test:unit:single": "env-cmd -f $ENV_PATH jest --config ./test/jest-unit.json",
    "run-test-container": "docker rmi -f node_test_image && docker rm -f node_test 2>/dev/null && docker build -f Dockerfile.dev -t node_test_image . && docker run -it -d --network backend_bridge -p 3001:3000 --name node_test node_test_image /bin/bash /opt/startup.dev.sh --test-only && if docker logs -f node_test | grep -Eq '[0-9]+ failed|ER_BAD_DB_ERROR'; then echo \"test failed\"; docker logs node_test; exit 1; fi"
  },
  "dependencies": {
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^9.0.0",
    "@nestjs/event-emitter": "^2.0.4",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/schedule": "^4.1.0",
    "@nestjs/swagger": "^7.4.0",
    "@nestjs/typeorm": "^10.0.2",
    "@opentelemetry/auto-instrumentations-node": "^0.50.0",
    "@opentelemetry/sdk-node": "^0.53.0",
    "@types/multer": "^1.4.12",
    "awesome-phonenumber": "^7.0.1",
    "axios": "^1.7.9",
    "class-transformer": "^0.5.1",
    "cron": "^3.1.7",
    "moment": "^2.30.1",
    "moment-timezone": "^0.5.45",
    "mysql2": "^3.11.5",
    "nestjs-i18n": "^10.4.9",
    "ngeohash": "^0.6.3",
    "passport-jwt": "^4.0.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.3.20",
    "winston": "^3.14.2",
    "winston-loki": "^6.1.2"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.0.0",
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.8",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "env-cmd": "^10.1.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.1.3",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.3.0",
    "ts-jest": "28.0.8",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "husky": {
    "hooks": {
      "pre-push": "npm run run-test-container"
    }
  }
}
